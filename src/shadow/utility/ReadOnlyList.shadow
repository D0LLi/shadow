import shadow:standard@InvalidOperationException;

locked class shadow:utility@
	ReadOnlyList<T>
is	List<T>
{
	private constant String ERROR = "This is a readonly list and cannot be modified.";
	List<T> list;
	
	public create(List<T> list)
	{
		this:list = list;
	}
	
	public readonly get size() => (int)
	{
		return list->size;
	}
	
	public readonly get sizeLong() => (long)
	{
		return list->sizeLong;
	}
	
	public readonly indexOf(T element) => (long)
	{
		return list.indexOf(element);
	}
	
	public readonly contains(T element) => (boolean)
	{
		return list.contains(element);
	}
	
	public readonly isEmpty() => (boolean)
	{
		return list.isEmpty();
	}
	
	public readonly iterator() => (Iterator<T>)
	{
		return list.iterator();
	}
	
	public readonly index(long key) => (T)
	{
		return list.index(key);
	}
	
	public add(T element) => (ReadOnlyList<T>)
	{
		throw InvalidOperationException:create(ERROR);
	}
	
	public delete(long index) => (T)
	{
		throw InvalidOperationException:create(ERROR);
	}
	
	public remove(T element) => (boolean)
	{
		throw InvalidOperationException:create(ERROR);
	}
	
	public clear() => (ReadOnlyList<T>)
	{
		throw InvalidOperationException:create(ERROR);
	}
	
	public index(long key, T value) => ()
	{
		throw InvalidOperationException:create(ERROR);
	}
}

/**
 * Interface {@code CanMultiply<T>} specifies that a class can be multiplied by
 * an object of type {@code T}, producing a {@code T}.  This interface
 * allows overloading of the {@code *} operator.  If the {@code *} operator   
 * is applied, the appropriate {@code multiply(T)} method will be called.
 *
 * Although this interface allows the {@code *} operator to be overloaded with
 * arbitrary functionality for any class, it is intended to make operations
 * between numerical classes more readable.
 */
interface shadow:standard@
	CanMultiply<T>
{
	/**
	 * Method called when the {@code *} operator is overloaded.
	 * @param other object to multiply by
	 * @return product of the division
	 */
	readonly multiply(T other) => (T);
}

/**
 * Interface {@code CanIndexStoreNullable<K,V>} specifies that a class can
 * store a value in a location associated with a particular key. This
 * interface allows the overloading of the {@code []} operator used to store
 * values. If this operator is applied, the appropriate {@code index(K,V)}
 * method will be called, storing the value in a location associated with the
 * key. This interface provides store indexing functionality for nullable
 * arrays and other symbol tables. It differs from the
 * {@code CanIndexStore<K,V>} interface in that its {@code index(K,V)} method
 * can store a {@code null} value.
 *
 * Interface {@code CanIndexNullable<K,V>} provides related index load
 * functionality.
 *
 * @seeDoc shadow:standard@CanIndexStore
 * @seeDoc shadow:standard@CanIndexNullable
 */
interface shadow:standard@CanIndexStoreNullable<K,V>
{
	/**
	 * Method called to store a value in a location associated with the key.
	 * @param key key value
	 * @param value value to be stored in a location associated with the key	  	 
	 */
	index(K key, nullable V value) => ();
}
/**
 * Singleton {@code Time} contains useful methods to easily create {@code TimeSpan}s.
 *
 * @author Claude Abounegm
 */
immutable singleton shadow:standard@
	Time
{
	get TimeSpan InfiniteTimeout = TimeSpan:create(-1);
	
	public readonly get epochNow() => (TimeSpan)
	{
		return TimeSpan:create(System.epochNanoTime());
	}
	
	public readonly fromNanoSeconds(long nanoSeconds) => (TimeSpan)
	{
		return TimeSpan:create(nanoSeconds);
	}
	
	public readonly fromMicroSeconds(int microSeconds) => (TimeSpan)
	{
		return TimeSpan:create(0, 0, microSeconds, 0);
	}
	
	public readonly fromMilliSeconds(int milliSeconds) => (TimeSpan)
	{
		return TimeSpan:create(0, milliSeconds, 0, 0);
	}
	
	public readonly fromSeconds(int seconds) => (TimeSpan)
	{
		return TimeSpan:create(seconds, 0, 0, 0);
	}
	
	public readonly fromMinutes(int minutes) => (TimeSpan)
	{
		return TimeSpan:create(0, minutes, 0);
	}
	
	public readonly fromHours(int hours) => (TimeSpan)
	{
		return TimeSpan:create(hours, 0, 0);
	}
	
	public readonly fromDays(int days) => (TimeSpan)
	{
		return TimeSpan:create(days, 0, 0, 0, 0);
	}
}
import shadow:utility@Random;
import shadow:io@Console;

class shadow:test@RandomTest
{
    public main(String[] args) => () 
    { 
    	Console out;
        int j;
        
        // CORRECTNESS TEST
        // COMPARE WITH http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.out
        Random r = Random:create( {0x123u, 0x234u, 0x345u, 0x456u} );        
        out.printLine("1000 outputs of genrand_int32()");
        for (j=0;j<1000;j+= 1)
		{           
            uint value = r.nextUInt();          
            String s = #value;
            while( s->size < 10 )
            	s = " " # s;  // buffer
            out.print(s # " ");
            if( j%5==4 )
            	out.printLine();       
        }
               
        //this part is different since it generates two 32-bit values to make one double
        out.printLine("\n1000 outputs of genrand_real53()\n");       
        for (j = 0; j < 1000; j+= 1)
		{
            out.print( r.nextDouble() # " " );
            if (j%5==4)
            	out.printLine();
        }
        
        r = Random:create(); //uses system time to seed
        out.printLine("Random byte: " # r.nextByte());
        out.printLine("Random ubyte: " # r.nextUByte());
        out.printLine("Random short: " # r.nextShort());
        out.printLine("Random ushort: " # r.nextUShort());        
        out.printLine("Random int: " # r.nextInt());
        out.printLine("Random uint: " # r.nextUInt());        
        out.printLine("Random long: " # r.nextLong());    
        out.printLine("Random ulong: " # r.nextULong());
        out.printLine("Random double: " # r.nextDouble());
        out.printLine("Random float: " # r.nextFloat());
        out.printLine("Random gaussian: " # r.nextGaussian());
	}
}
import shadow:io@Console;

class shadow:test@ComplicatedExceptionTest
{	
	public test(int value) => ()
	{
		try
		{
			if(value == 1)
				throw ExceptionA:create();
				
			if(value == 3)
				throw ExceptionB:create();
			
			if(value == 4)
			{
				nullable String ouch = null;
				Console.printLine(check(ouch));
			}
			
			if(value == 5)
				throw Exception:create();				
			
		}
		catch(ExceptionA e)
		{
			Console.printLine("Catch " # e);
		}
		recover
		{
			Console.printLine("Recover");
		}
		finally
		{
			Console.printLine("Finally");
			if(value == 2)
				throw Exception:create();
			
			if(value == 5)
			{	
				Exception ex = ExceptionB:create();
				try
				{
					throw ex;		
				}
				finally
				{
					Console.printLine("Overriding old exception with " # ex);
				}
			}
		}
	}
	
	public main( String[] args ) => ()
	{
		for(int i = 1; i <= 5; i += 1)
		{
			Console.printLine(i);
			
			try
			{
				test(i);
				Console.printLine("No catch");
			}
			catch(ExceptionB e)
			{
				Console.printLine("Catch outer 1 " # e);
			}
			catch(Exception e)
			{
				Console.printLine("Catch outer 2 " # e);
			}
		}
	}
}

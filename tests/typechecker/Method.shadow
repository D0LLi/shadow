/**
 * This class tests a bunch of different method declarations
 */
class Method {
    public b() => () {  }   // basic void

    public c(int a) => () {  }   // built-in to void
    public d(code a) => () {  }   // built-in to void
    public e(float a) => () {  }   // built-in to void

    public f() => (int) { return 5; }   // void to built-in
    public g() => (code) { return '?'; }   // void to built-in
    public h() => (float) { return 1.0f; }   // void to built-in
    
    public i(int a) => (int) { return a; }   // built-in to built-in
    public j(float a) => (int) { return 5;  }   // built-in to built-in
    public k(int a) => (float) { return 1.0f; }   // built-in to built-in
    
    public l(int a, int b) => () {  }
    public m(int a, int b) => (int) { return 5;  }
    public n(int a, int b) => (int, int) { return (5, 7); }
    
    // arrays
    public o(int[] a) => () {  }
    public p(int[] a, float[] b) => () {  }
    public q() => (int[]) { return int:create[10]; }
    public r() => (int[], float[]) { return (int:create[10], float:create[5]);  }
    public s() => (int[], int[]) { return (int:create[10], int:create[5]); }

    // functions
    public t(() => () f) => () {  }
    public u(int a, () => () f) => () {  }
    public v(() => () f, int a) => () { }
    public w(int a, () => () f, int b) => () { }
    public x((int) => () f) => () {  }
    public y(() => (int) f) => () {  }
    public z((int) => (int) f) => () {  }
    public aa(int a, (int) => (int) f) => () { }
    public bb((int) => (int) f, int a) => () { }
    public cc(int a, (int) => (int) f, int b) => () { }
    
    /*
    // All the following have method references in return types.
    // The raw type-checker supports these, but the TAC builder does not.
    // They're commented out until there is TAC support.
    
    public dd() => (() => ()) { }
    public ee() => (int, () => ()) { }
    public ff() => (() => (), int) { }
    public gg() => (int, () => (), int) { }
    public hh() => ((int) => ()) { }
    public ii() => (() => (int)) { }
    public jj() => ((int) => (int)) { }
    public kk() => (int, (int) => (int)) { }
    public ll() => ((int) => (int), int) { }
    public mm() => (int, (int) => (int), int) { }
    
    public nn(() => () f) => (() => ()) { }
    
    public oo(int a, () => () f, int b) => (() => ()) { }
    public pp(() => () f) => (int, () => (), int) { }
    public qq(int a, () => () f, int b) => (int, () => (), int) { }
    
    public rr((int) => (int) f) => ((int) => (int)) { }
    public ss(int a, (int) => (int) f, int b) => (int, (int) => (int), int) { }
    
    // multiple functions
    public tt(() => () f1, () => () f2) => () { }
    public uu(() => () f1, () => () f2) => (() => ()) { }
    public vv(() => () f1, () => () f2) => (() => (), () => ()) { }
    
    public ww((int) => (int) f1, (int) => (int) f2) => () { }
    public xx((int) => (int) f1, (int) => (int) f2) => ((int) => (int)) { }
    public yy((int) => (int) f1, (int) => (int) f2) => ((int) => (int), (int) => (int)) { }
    
    // functions inside of functions
    public zz((()=>()) => () f) => () { }
    public aaa((()=>()) => (()=>()) f) => () { }
    public bbb((()=>()) => (()=>()) f) => (()=>()) { }
    
    public ccc(((int)=>(int)) => () f) => () { }
    public ddd(((int)=>(int)) => ((int)=>(int)) f) => () { }
    public eee(((int)=>(int)) => ((int)=>(int)) f) => ((int)=>(int)) { }
	*/
}


